//
// Generated file, do not edit! Created by nedtool 5.6 from ReadyToPlatoonMsg.msg.
//

#ifndef __READYTOPLATOONMSG_M_H
#define __READYTOPLATOONMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from ReadyToPlatoonMsg.msg by nedtool.
 * <pre>
 * //
 * // ReadyToPlatoonMsg.msg
 * //
 * //      Author: rtobi
 * //
 * packet ReadyToPlatoonMsg
 * {
 *     uint32_t txStationID;
 *     uint32_t rxStationID;
 *     string txTraciID;
 *     string rxTraciID;
 *     bool ready;
 * }
 * </pre>
 */
class ReadyToPlatoonMsg : public ::omnetpp::cPacket
{
  protected:
    uint32_t txStationID;
    uint32_t rxStationID;
    ::omnetpp::opp_string txTraciID;
    ::omnetpp::opp_string rxTraciID;
    bool ready;

  private:
    void copy(const ReadyToPlatoonMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ReadyToPlatoonMsg&);

  public:
    ReadyToPlatoonMsg(const char *name=nullptr, short kind=0);
    ReadyToPlatoonMsg(const ReadyToPlatoonMsg& other);
    virtual ~ReadyToPlatoonMsg();
    ReadyToPlatoonMsg& operator=(const ReadyToPlatoonMsg& other);
    virtual ReadyToPlatoonMsg *dup() const override {return new ReadyToPlatoonMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual uint32_t getTxStationID() const;
    virtual void setTxStationID(uint32_t txStationID);
    virtual uint32_t getRxStationID() const;
    virtual void setRxStationID(uint32_t rxStationID);
    virtual const char * getTxTraciID() const;
    virtual void setTxTraciID(const char * txTraciID);
    virtual const char * getRxTraciID() const;
    virtual void setRxTraciID(const char * rxTraciID);
    virtual bool getReady() const;
    virtual void setReady(bool ready);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ReadyToPlatoonMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ReadyToPlatoonMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __READYTOPLATOONMSG_M_H

